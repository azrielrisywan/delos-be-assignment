{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/farm/create": {
            "post": {
                "description": "Create a new farm with a unique name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DELOS CRUD-APP FARMS"
                ],
                "summary": "Create a new Farm",
                "parameters": [
                    {
                        "description": "Create Farm Payload",
                        "name": "CreateFarm",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateFarm"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.CreateFarmResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/dto.CreateFarmErrorResponse"
                        }
                    }
                }
            }
        },
        "/farm/delete/{id}": {
            "delete": {
                "description": "Delete a farm by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DELOS CRUD-APP FARMS"
                ],
                "summary": "Delete a Farm",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Farm ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.DeleteFarmResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.DeleteFarmErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dto.DeleteFarmErrorResponse"
                        }
                    }
                }
            }
        },
        "/farm/list": {
            "get": {
                "description": "Get the list of all farms",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DELOS CRUD-APP FARMS"
                ],
                "summary": "List Farms",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/dto.Farm"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dto.FarmListErrorResponse"
                        }
                    }
                }
            }
        },
        "/farm/list/{id}": {
            "get": {
                "description": "Get details of a farm by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DELOS CRUD-APP FARMS"
                ],
                "summary": "Get Farm by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Farm ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.FarmResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dto.FarmListErrorResponse"
                        }
                    }
                }
            }
        },
        "/farm/update": {
            "put": {
                "description": "Update a farm by ID or create a new farm if the ID does not exist",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DELOS CRUD-APP FARMS"
                ],
                "summary": "Update a Farm",
                "parameters": [
                    {
                        "description": "Update Farm Payload",
                        "name": "UpdateFarm",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateFarm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateFarmResponse"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.CreateFarmResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateFarmErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateFarmErrorResponse"
                        }
                    }
                }
            }
        },
        "/pond/create": {
            "post": {
                "description": "Create a new pond",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DELOS CRUD-APP PONDS"
                ],
                "summary": "Create Pond",
                "parameters": [
                    {
                        "description": "Pond creation payload",
                        "name": "CreatePond",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreatePond"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.Pond"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.CreatePondErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dto.CreatePondErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/dto.CreatePondErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.CreatePondErrorResponse"
                        }
                    }
                }
            }
        },
        "/pond/delete/{id}": {
            "delete": {
                "description": "Delete a pond by its ID",
                "tags": [
                    "DELOS CRUD-APP PONDS"
                ],
                "summary": "Delete Pond",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Pond ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.DeletePondResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.DeletePondErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dto.DeletePondErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.DeletePondErrorResponse"
                        }
                    }
                }
            }
        },
        "/pond/list": {
            "get": {
                "description": "Get the list of all ponds",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DELOS CRUD-APP PONDS"
                ],
                "summary": "List Ponds",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.Pond"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dto.PondListErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.PondListErrorResponse"
                        }
                    }
                }
            }
        },
        "/pond/list/{id}": {
            "get": {
                "description": "Get details of a specific pond by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DELOS CRUD-APP PONDS"
                ],
                "summary": "Get Pond by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Pond ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.Pond"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.PondListByIdErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dto.PondListByIdErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.PondListByIdErrorResponse"
                        }
                    }
                }
            }
        },
        "/pond/update": {
            "put": {
                "description": "Update an existing pond",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DELOS CRUD-APP PONDS"
                ],
                "summary": "Update Pond",
                "parameters": [
                    {
                        "description": "Pond update payload",
                        "name": "UpdatePond",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdatePond"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.Pond"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.UpdatePondErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.UpdatePondErrorResponse"
                        }
                    }
                }
            }
        },
        "/signin": {
            "post": {
                "description": "Sign In using email and password if you have signed up before",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DELOS AUTH-APP"
                ],
                "summary": "Sign In",
                "parameters": [
                    {
                        "description": "Sign In Payload",
                        "name": "SignInRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.SignInRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.SignInResponse"
                        }
                    }
                }
            }
        },
        "/signup": {
            "post": {
                "description": "Sign Up using email and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DELOS AUTH-APP"
                ],
                "summary": "Sign Up",
                "parameters": [
                    {
                        "description": "Sign Up Payload",
                        "name": "SignUpRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.SignUpRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.SignUpResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.CreateFarm": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "dto.CreateFarmErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Duplicate farm name"
                }
            }
        },
        "dto.CreateFarmResponse": {
            "type": "object",
            "properties": {
                "created_on": {
                    "type": "string",
                    "example": "2024-07-19T13:41:42.770296Z"
                },
                "deleted": {
                    "type": "string",
                    "example": "0"
                },
                "deleted_on": {
                    "type": "string",
                    "example": "null"
                },
                "id": {
                    "type": "string",
                    "example": "c48e3c9d-50a8-400c-b63f-f72b67c6fe5b"
                },
                "name": {
                    "type": "string",
                    "example": "Bero Farm"
                }
            }
        },
        "dto.CreatePond": {
            "type": "object",
            "properties": {
                "farm_id": {
                    "type": "string",
                    "example": "c48e3c9d-50a8-400c-b63f-f72b67c6fe5b"
                },
                "name": {
                    "type": "string",
                    "example": "Main Pond"
                }
            }
        },
        "dto.CreatePondErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Failed to create pond"
                }
            }
        },
        "dto.DeleteFarmErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Invalid ID or Farm not found"
                }
            }
        },
        "dto.DeleteFarmResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Farm deleted successfully"
                }
            }
        },
        "dto.DeletePondErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Failed to delete pond"
                }
            }
        },
        "dto.DeletePondResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Pond deleted successfully"
                }
            }
        },
        "dto.Farm": {
            "type": "object",
            "properties": {
                "created_on": {
                    "type": "string",
                    "example": "2024-07-19T13:41:42.770296Z"
                },
                "deleted": {
                    "type": "string",
                    "example": "0"
                },
                "deleted_on": {
                    "type": "string",
                    "example": "null"
                },
                "id": {
                    "type": "string",
                    "example": "c48e3c9d-50a8-400c-b63f-f72b67c6fe5b"
                },
                "name": {
                    "type": "string",
                    "example": "Bero Farm"
                }
            }
        },
        "dto.FarmListErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "No farms found"
                }
            }
        },
        "dto.FarmResponse": {
            "type": "object",
            "properties": {
                "created_on": {
                    "type": "string",
                    "example": "2024-07-19T13:41:42.770296Z"
                },
                "deleted": {
                    "type": "string",
                    "example": "0"
                },
                "deleted_on": {
                    "type": "string",
                    "example": "null"
                },
                "id": {
                    "type": "string",
                    "example": "c48e3c9d-50a8-400c-b63f-f72b67c6fe5b"
                },
                "name": {
                    "type": "string",
                    "example": "Bero Farm"
                }
            }
        },
        "dto.Pond": {
            "type": "object",
            "properties": {
                "created_on": {
                    "type": "string",
                    "example": "2024-07-19T13:41:42.770296Z"
                },
                "deleted": {
                    "type": "string",
                    "example": "0"
                },
                "deleted_on": {
                    "type": "string",
                    "example": "null"
                },
                "farm_id": {
                    "type": "string",
                    "example": "d01629f8-c708-4c92-b950-848eefd26b9a"
                },
                "id": {
                    "type": "string",
                    "example": "c48e3c9d-50a8-400c-b63f-f72b67c6fe5b"
                },
                "name": {
                    "type": "string",
                    "example": "Main Pond"
                }
            }
        },
        "dto.PondListByIdErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Invalid ID or Pond not found"
                }
            }
        },
        "dto.PondListErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "No ponds found"
                }
            }
        },
        "dto.SignInRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "risywanazriel@gmail.com"
                },
                "password": {
                    "type": "string",
                    "example": "123456"
                }
            }
        },
        "dto.SignInResponse": {
            "type": "object",
            "properties": {
                "user": {
                    "type": "object",
                    "properties": {
                        "access_token": {
                            "type": "string"
                        },
                        "expires_in": {
                            "type": "integer"
                        },
                        "provider_refresh_token": {
                            "type": "string"
                        },
                        "provider_token": {
                            "type": "string"
                        },
                        "refresh_token": {
                            "type": "string"
                        },
                        "token_type": {
                            "type": "string"
                        },
                        "user": {
                            "type": "object",
                            "properties": {
                                "app_metadata": {
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "aud": {
                                    "type": "string"
                                },
                                "confirmation_sent_at": {
                                    "type": "string"
                                },
                                "confirmed_at": {
                                    "type": "string"
                                },
                                "created_at": {
                                    "type": "string"
                                },
                                "email": {
                                    "type": "string"
                                },
                                "id": {
                                    "type": "string"
                                },
                                "invited_at": {
                                    "type": "string"
                                },
                                "role": {
                                    "type": "string"
                                },
                                "updated_at": {
                                    "type": "string"
                                },
                                "user_metadata": {
                                    "$ref": "#/definitions/dto.UserMetadata"
                                }
                            }
                        }
                    }
                }
            }
        },
        "dto.SignUpRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "risywanazriel@gmail.com"
                },
                "password": {
                    "type": "string",
                    "example": "123456"
                }
            }
        },
        "dto.SignUpResponse": {
            "type": "object",
            "properties": {
                "user": {
                    "type": "object",
                    "properties": {
                        "app_metadata": {
                            "type": "object",
                            "additionalProperties": true
                        },
                        "aud": {
                            "type": "string"
                        },
                        "confirmation_sent_at": {
                            "type": "string"
                        },
                        "confirmed_at": {
                            "type": "string"
                        },
                        "created_at": {
                            "type": "string"
                        },
                        "email": {
                            "type": "string"
                        },
                        "id": {
                            "type": "string"
                        },
                        "invited_at": {
                            "type": "string"
                        },
                        "role": {
                            "type": "string"
                        },
                        "updated_at": {
                            "type": "string"
                        },
                        "user_metadata": {
                            "$ref": "#/definitions/dto.UserMetadata"
                        }
                    }
                }
            }
        },
        "dto.UpdateFarm": {
            "type": "object",
            "required": [
                "id",
                "name"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "example": "c48e3c9d-50a8-400c-b63f-f72b67c6fe5b"
                },
                "name": {
                    "type": "string",
                    "example": "Bero Farm Updated"
                }
            }
        },
        "dto.UpdateFarmErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Invalid ID"
                }
            }
        },
        "dto.UpdateFarmResponse": {
            "type": "object",
            "required": [
                "id",
                "name"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "example": "c48e3c9d-50a8-400c-b63f-f72b67c6fe5b"
                },
                "name": {
                    "type": "string",
                    "example": "Bero Farm Updated"
                }
            }
        },
        "dto.UpdatePond": {
            "type": "object",
            "properties": {
                "farm_id": {
                    "type": "string",
                    "example": "c48e3c9d-50a8-400c-b63f-f72b67c6fe5b"
                },
                "id": {
                    "type": "string",
                    "example": "d01629f8-c708-4c92-b950-848eefd26b9a"
                },
                "name": {
                    "type": "string",
                    "example": "Updated Pond"
                }
            }
        },
        "dto.UpdatePondErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Failed to update pond"
                }
            }
        },
        "dto.UserMetadata": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "email_verified": {
                    "type": "boolean"
                },
                "phone_verified": {
                    "type": "boolean"
                },
                "sub": {
                    "type": "string"
                }
            }
        }
    }
}